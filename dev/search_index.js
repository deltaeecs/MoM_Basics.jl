var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#Docs","page":"API","title":"Docs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [MoM_Basics, MoM_Basics.GaussQuadrature4Geo, MoM_Basics.TaylorWins]","category":"page"},{"location":"api/#MoM_Basics.EDGEVmINTriVsID","page":"API","title":"MoM_Basics.EDGEVmINTriVsID","text":"三角形在构建时构成第i个边的两个点为三角形中的除了第i个点的两个点，以下为索引构成第i个边的第一个点（计算边向量被 - 掉）时采用的对应点\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.EDGEVpINTriVsID","page":"API","title":"MoM_Basics.EDGEVpINTriVsID","text":"三角形在构建时构成第i个边的两个点为三角形中的除了第i个点的两个点，以下为索引构成第i个边的第二个点（计算边向量时用于减去第二个点 掉）时采用的对应点\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.ExcitingSources","page":"API","title":"MoM_Basics.ExcitingSources","text":"复合激励类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.GQ1DID2GQ3DIDVector","page":"API","title":"MoM_Basics.GQ1DID2GQ3DIDVector","text":"构建从六面体的 高斯求积线性索引 映射到 三维索引的数组\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuad","page":"API","title":"MoM_Basics.GQPNQuad","text":"六面体边界四边形正常处理高斯求积时高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuad1D","page":"API","title":"MoM_Basics.GQPNQuad1D","text":"六面体边界四边形 1 维度高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuad1DSSglr","page":"API","title":"MoM_Basics.GQPNQuad1DSSglr","text":"处理超奇异性时六面体边界四边形 1 维度高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuad1DSglr","page":"API","title":"MoM_Basics.GQPNQuad1DSglr","text":"处理奇异性时六面体边界四边形 1 维度高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuadSSglr","page":"API","title":"MoM_Basics.GQPNQuadSSglr","text":"六面体边界四边形处理超奇异性时高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.GQPNQuadSglr","page":"API","title":"MoM_Basics.GQPNQuadSglr","text":"六面体边界四边形处理奇异性时高斯求积点数。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.Params","page":"API","title":"MoM_Basics.Params","text":"保存仿真参数的实例。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.Precision","page":"API","title":"MoM_Basics.Precision","text":"创建实例控制精度\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.QuadGQInfo","page":"API","title":"MoM_Basics.QuadGQInfo","text":"六面体边界四边形正常处理高斯求积信息。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.QuadGQInfoSSglr","page":"API","title":"MoM_Basics.QuadGQInfoSSglr","text":"六面体边界四边形处理超奇异性高斯求积信息。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.QuadGQInfoSglr","page":"API","title":"MoM_Basics.QuadGQInfoSglr","text":"六面体边界四边形处理奇异性高斯求积信息。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.SimulationParams","page":"API","title":"MoM_Basics.SimulationParams","text":"非数值仿真参数实例\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.VSBFTypes","page":"API","title":"MoM_Basics.VSBFTypes","text":"创建常数实例保存仿真时的面、体基函数类型。\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.Vec3IdxCircle","page":"API","title":"MoM_Basics.Vec3IdxCircle","text":"1-3 的循环\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.facen2OppositeID","page":"API","title":"MoM_Basics.facen2OppositeID","text":"六面体的六个面的对面\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.facesVertIDs","page":"API","title":"MoM_Basics.facesVertIDs","text":"六面体的六个面的端点\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.memory","page":"API","title":"MoM_Basics.memory","text":"程序内存记录字典\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.oppFacesVertIDs","page":"API","title":"MoM_Basics.oppFacesVertIDs","text":"六面体的六个面的 对面的 端点\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.timer","page":"API","title":"MoM_Basics.timer","text":"程序计时器字典\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.uv2FreeVnsDict","page":"API","title":"MoM_Basics.uv2FreeVnsDict","text":"从四边形的 uv 坐标映射到 自由端的 id\n\n\n\n\n\n","category":"constant"},{"location":"api/#MoM_Basics.AbstractAntennaArray","page":"API","title":"MoM_Basics.AbstractAntennaArray","text":"阵列天线抽象类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.AntennaArray","page":"API","title":"MoM_Basics.AntennaArray","text":"AntennaArray{FT<:Real, AT, N} <: AbstractAntennaArray\n\n机扫阵列天线 (mechanically scanned array, MSA)、相控阵 (Phased Array)阵列天线 orient 采用的是欧拉角，参考eulerRotationMat 注意阵列初始指向由提供的天线单元合成，作为阵列只提供指向旋转。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.AntennaArray-Union{Tuple{AbstractArray{AT, N}}, Tuple{N}, Tuple{AT}} where {AT, N}","page":"API","title":"MoM_Basics.AntennaArray","text":"AntennaArray(antennas::AbstractArray{AT, N}; center = zero(MVec3D{Precison.FT}), orient = (0., 0., 0.)) where {AT, N}\n\n初始化阵列天线，默认为方阵。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.AntennaType","page":"API","title":"MoM_Basics.AntennaType","text":"天线抽象类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.BasisFunctionType","page":"API","title":"MoM_Basics.BasisFunctionType","text":"基函数抽象类型\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.ConstBasisFunction","page":"API","title":"MoM_Basics.ConstBasisFunction","text":"常数基抽象类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.ExcitingSource","page":"API","title":"MoM_Basics.ExcitingSource","text":"激励源抽象类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.HexahedraInfo","page":"API","title":"MoM_Basics.HexahedraInfo","text":"HexahedraInfo{IT<: Integer, FT<:AbstractFloat, CT<:Complex} <: VolumeCellType{IT, FT, CT}\n\n六面体信息结构体：\n\nhexaID      ::IT                    编号\nvolume      ::FT                    体积\nε           ::CT                    相对介电常数\nκ           ::CT                    介质对比度\ncenter      ::MVec3D{FT}            中心坐标\nverticesID  ::MVector{8, IT}        所在节点id\nvertices    ::MMatrix{3, 8, FT,24}  六面体4个角点坐标，每列为一个点\nfacesn̂      ::MMatrix{3, 8, FT,24}  四个面的外法向量\nfacesvid    ::MMatrix{3, 8, IT,24}  四个面包含的四个id\nfacesArea   ::MVector{6, FT}        四个面的面积（根据为unitri正负部分赋予正负号）\nfaces       ::Vector{Quads4Hexa{IT, FT}}    四个面的具体信息\ninBfsID     ::Vector{IT}            六面体所在的基函数的ID\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.HexahedraInfo-Union{Tuple{}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.HexahedraInfo","text":"HexahedraInfo{IT, FT, CT}(hexaID::IT = zero(IT)) where {IT <: Integer, FT<:AbstractFloat, CT<:Complex}\n\nHexahedraInfo 的默认构造函数，除了输入的编号 hexaID 外所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.HexahedraMesh","page":"API","title":"MoM_Basics.HexahedraMesh","text":"HexahedraMesh{IT, FT} <: MeshDataType\n\n六面体网格文件，包括六面体数 hexnum、节点 node、构成六面体的节点 id 数组 hexahedras 等信息。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.LinearBasisFunction","page":"API","title":"MoM_Basics.LinearBasisFunction","text":"线性基抽象类\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.MagneticDipole","page":"API","title":"MoM_Basics.MagneticDipole","text":"MagneticDipole(id = 0; Iml = 0., phase = 0., orient = zero(MVec3D{Float32}), centerlc = zero(MVec3D{Float32}), centergb = zero(MVec3D{Float32}))\n\n精度可变的 MagneticDipole 构造函数\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.MagneticDipole-2","page":"API","title":"MoM_Basics.MagneticDipole","text":"MagneticDipole{FT<: Real}<:AntennaType\n\n磁偶极子天线类型。\n\nid      ::Integer               编号\nIml     ::Complex{FT}           磁流线值\nV       ::FT                    磁流线幅值\nphase   ::FT                    相位\norient  ::MVec3D{FT}            指向欧拉角\ncenterlc::MVec3D{FT}            局部坐标下的中心位置\ncentergb::MVec3D{FT}            全局坐标下的中心位置\nl2gRot  ::MMatrix{3, 3, FT, 9}  局部坐标到全局坐标的旋转变换矩阵\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.MagneticDipole-Union{Tuple{}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:Real, CT<:Complex{FT}}","page":"API","title":"MoM_Basics.MagneticDipole","text":"    MagneticDipole{FT}(\n    id      ::Int32         =   zero(Int32);        # 编号\n    Iml     ::CT            =   zero(CT),           # 磁流线值\n    phase   ::FT            =   zero(FT),           # 相位（输入弧度(rad)单位）\n    orient  ::MVec3D{FT}    =   zero(MVec3D{FT}),   # 指向欧拉角\n    centerlc::MVec3D{FT}    =   zero(MVec3D{FT}),   # 局部坐标下的中心位置\n    centergb::MVec3D{FT}    =   zero(MVec3D{FT}),   # 全局坐标下的中心位置\n    I0S     ::FT            =   zero(FT),           # 电流环幅值\n    unit                    =   :rad    ) \n    where{FT <: Real, CT <: Complex{FT}}\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.MeshDataType","page":"API","title":"MoM_Basics.MeshDataType","text":"网格数据抽象类型\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.MeshFormat","page":"API","title":"MoM_Basics.MeshFormat","text":"网格文件抽象类型\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.MeshNodeTriTetraHexa","page":"API","title":"MoM_Basics.MeshNodeTriTetraHexa","text":"MeshNodeTriTetraHexa{IT, FT} <: MeshDataType\n\n三角形、四面体、六面体混合网格数据类型：\n\ngeonum      ::Int           包含的所有网格元的数量\nmeshT       ::DataType      网格类型 单一的以其网格类型表示，混合以 VSCellType 表示\ntrinum      ::Int           包含的三角形数量\ntetranum    ::Int           包含的四面体数量\nhexanum     ::Int           包含的六面体数量\nnode        ::Array{FT, 2}  节点坐标数组(3*nodenum)\ntriangles   ::Array{IT, 2}  三角形包含的nodeid数组:(3*trinum)\ntetrahedras ::Array{IT, 2}  四面体包含的nodeid数组:(4*tetranum)\nhexahedras  ::Array{IT, 2}  六面体包含的nodeid数组:(6*hexanum)\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.NasMesh","page":"API","title":"MoM_Basics.NasMesh","text":".nas 网格文件类型。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.PWC","page":"API","title":"MoM_Basics.PWC","text":"PWC{IT<:Integer , FT<:AbstractFloat} <: ConstBasisFunction\n\nPWC 基函数复合类型：\n\nbfID        ::IT            基函数编号\ninGeo       ::IT            基函数所在两个四面体编号\ncenter      ::MVec3D{FT}    基函数中心，用于八叉树分组\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.PWC-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.PWC","text":"PWC{IT, FT}() where {IT <: Integer, FT<:AbstractFloat}\n\nPWC 的默认构造函数，所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.ParamsType","page":"API","title":"MoM_Basics.ParamsType","text":"ParamsType{FT<:AbstractFloat, CT<:Complex{FT}}\n\n创建参数类型以方便保存仿真参数并控制精度：\n\nfrequency   ::FT        频率\nω_0         ::FT        角频率\nK_0         ::FT        波数\nλ_0         ::CT        波长\nJη_0divK    ::CT        常数\nJK_0        ::CT        常数\nk²          ::FT        常数\ndivJω       ::CT        常数\nmk²div9     ::FT        常数\nmJη_0div4πK ::CT        常数\nC4divk²     ::FT        常数\nJKηdiv16π   ::CT        常数\ndiv9Jω      ::CT        常数\nRsglr       ::FT        处理奇异性的相对距离阈值\nresultDir   ::String    存放结果的位置\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.ParamsType-Union{Tuple{CT}, Tuple{FT}} where {FT<:AbstractFloat, CT<:Complex{FT}}","page":"API","title":"MoM_Basics.ParamsType","text":"ParamsType{FT, CT}(frequency::FT) where{FT<:AbstractFloat, CT<:Complex{FT}}\nParamsType(frequency::FT) where {FT<:AbstractFloat}\nParamsType{FT}(frequency) where {FT<:AbstractFloat}\n\n输入频率创建仿真参数实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.PlaneWave","page":"API","title":"MoM_Basics.PlaneWave","text":"PlaneWave{FT<:Real}<:ExcitingSource\n\n平面波源：\n\nθ   ::FT            球坐标角度θ\nϕ   ::FT            球坐标角度ϕ\nα   ::FT            波极化方向相对于 θhat_source 绕K̂_v旋转的角度\nf   ::FT            波频率\nV   ::FT            波激励幅度\nE_v ::SVec3D{FT}    入射波电场极化矢量\nk̂   ::SVec3D{FT}    入射波波矢向量\n\n默认构造函数：\n\nPlaneWave{FT}(θ::FT, ϕ::FT, α::FT, V::FT = one(FT))\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.PlaneWave-Union{Tuple{FT}, Tuple{Any, Any, Any}, NTuple{4, Any}} where FT","page":"API","title":"MoM_Basics.PlaneWave","text":"PlaneWave{FT}(θ, ϕ, α, V = one(FT)) where {FT}\n\n类型自动转换的 PlaneWave 构造函数。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.PrecisionT","page":"API","title":"MoM_Basics.PrecisionT","text":"创建类型用于控制程序精度\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.Quads4Hexa","page":"API","title":"MoM_Basics.Quads4Hexa","text":"Quads4Hexa{IT<: Integer, FT<:AbstractFloat} <: SurfaceCellType{IT, FT}\n\n单个构成六面体的四边形信息：\n\nisbd        ::Bool                  是否在体区域边界，\nδκ          ::Complex{FT}           介质对比度变化量，\nvertices    ::MMatrix{3, 4, FT, 12} 四边形 4 个角点坐标，每列为一个点，\nedgel       ::MVector{4, FT}        四个边长，\nedgev̂       ::MMatrix{3, 4, FT, 12} 四个边的单位指向向量，\nedgen̂       ::MMatrix{3, 4, FT, 12} 四个边的单位外法向量。\n\n合理安排位置后，四个基函数的自由端即为四边形四个点的顺序。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.Quads4Hexa-Union{Tuple{FT}, Tuple{FT, FT}} where FT","page":"API","title":"MoM_Basics.Quads4Hexa","text":"(q::Quads4Hexa)(u::FT, v::FT) where {FT}\n\n计算六面体边界四边形在局部坐标 (u, v) 下的点。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.Quads4Hexa-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.Quads4Hexa","text":"Quads4Hexa{IT, FT}() where {IT <: Integer, FT<:AbstractFloat}\n\nQuads4Hexa的默认构造函数，默认为边界，其它所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.RBF","page":"API","title":"MoM_Basics.RBF","text":"RBF{IT<:Integer , FT<:AbstractFloat} <: LinearBasisFunction\n\n屋顶基函数 (Rooftop basis function, RBF) 基函数复合类型：\n\nisbd        ::Bool              是否为边界元即半基函数，布尔类型\nbfID        ::IT                基函数编号，整形\ninGeo       ::MVector{2, IT}    基函数所在两个六面体编号（半基函数为1个，赋值成一样的两个），长度为2的向量数组\ninGeoID     ::MVector{2, IT}    基函数在两个六面体中的局部编号（半基函数为1个，赋值成一样的两个），取值1:4，长度为2的向量数组\ncenter      ::MVec3D{FT}        基函数中心，用于八叉树分组\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.RBF-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.RBF","text":"RBF{IT, FT}() where {IT <: Integer, FT<:AbstractFloat}\n\nRBF 的默认构造函数，所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.RWG","page":"API","title":"MoM_Basics.RWG","text":"RWG{IT<:Integer , FT<:AbstractFloat} <: LinearBasisFunction\n\nRWG基函数复合类型：\n\nisbd        ::Bool              是否为边界元即半基函数，布尔类型\nbfID        ::IT                基函数编号，整形\nedgel       ::FT                基函数边长，浮点型\ninGeo       ::MVector{2, IT}    基函数所在两个三角形编号（半基函数为1个，赋值成一样的两个），长度为2的向量数组\ninGeoID     ::MVector{2, IT}    基函数在两个上面三角形中的局部编号（半基函数为1个，赋值成一样的两个），取值1:3，长度为2的向量数组\ncenter      ::MVec3D{FT}        基函数中心，用于八叉树分组\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.RWG-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.RWG","text":"RWG{IT, FT}()where {IT <: Integer, FT<:AbstractFloat}\n\nRWG 的默认构造函数，默认非面的边界，所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.SWG","page":"API","title":"MoM_Basics.SWG","text":"SWG 基函数复合类型参数解释：\n\nisbd        ::Bool              是否为边界元即半基函数\nbfID        ::IT                基函数编号，整形\ninGeo       ::MVector{2, IT}    基函数所在两个四面体编号（半基函数为1个，赋值成一样的两个），长度为2的向量数组\ninGeoID     ::MVector{2, IT}    基函数在两个四面体中的局部编号（半基函数为1个，赋值成一样的两个），取值1:4，长度为2的向量数组\ncenter      ::MVec3D{FT}        基函数公共面中心，用于八叉树分组\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.SWG-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.SWG","text":"SWG{IT, FT}() where {IT <: Integer, FT<:AbstractFloat}\n\nSWG 的默认构造函数，所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.SimulationParamsType","page":"API","title":"MoM_Basics.SimulationParamsType","text":"SimulationParamsType\n\n非数值仿真参数信息：\n\nresultDir   ::String        结果文件夹路径\nieT         ::Symbol        积分方程类型，包括 EFIE, MFIE, CFIE等\nmeshfilename::String        网格文件名称\nmeshunit    ::Symbol        网格文件单位\nSHOWIMAGE   ::Bool          根是否要在前端显示图片\ndiscreteVar ::String        离散的体未知量类型，支持位移电流 `\"D\"` 或等效电流 `\"J\"`\nsbfT        ::Symbol        面基函数类型，目前仅支持 `:RWG`\nvbfT        ::Symbol        体基函数类型，目前支持 `:SWG, :RBF, :PWC`\nrecordMem   ::Bool          是否记录内存信息\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.SimulationParamsType-Tuple{}","page":"API","title":"MoM_Basics.SimulationParamsType","text":"SimulationParamsType(;ieT::Symbol=:EFIE, meshfilename::String = \"\", meshunit::Symbol = :mm, \nSHOWIMAGE = true, discreteVar = \"D\", sbfT = :RWG, vbfT = :nothing)\n\nSimulationParamsType 的默认构造函数。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.SurfaceCellType","page":"API","title":"MoM_Basics.SurfaceCellType","text":"面元\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.TetrahedraInfo","page":"API","title":"MoM_Basics.TetrahedraInfo","text":"TetrahedraInfo{IT<: Integer, FT<:AbstractFloat, CT<:Complex} <: VolumeCellType{IT, FT, CT}\n\n四面体信息结构体：\n\ntetraID     ::IT                    编号\nvolume      ::FT                    体积\nε           ::CT                    相对介电常数\nκ           ::CT                    介质对比度\ncenter      ::MVec3D{FT}            中心坐标\nverticesID  ::MVector{4, IT}        所在节点id\nvertices    ::MMatrix{3, 4, FT, 12} 四面体4个角点坐标，每列为一个点\nfacesn̂      ::MMatrix{3, 4, FT, 12} 四个面的外法向量\nfacesvid    ::MMatrix{3, 4, IT, 12} 四个面包含的三个id\nfacesArea   ::MVector{4, FT}        四个面的面积（根据为unitri正负部分赋予正负号）\nfaces       ::Vector{Tris4Tetra{IT, FT}}    四个面的具体信息\ninBfsID     ::Vector{IT}            四面体所在的基函数的ID\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.TetrahedraInfo-Union{Tuple{}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.TetrahedraInfo","text":"TetrahedraInfo{IT, FT, CT}(hexaID::IT = zero(IT)) where {IT <: Integer, FT<:AbstractFloat, CT<:Complex}\n\nTetrahedraInfo 的默认构造函数，除了输入的编号 tetraID 外所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.TetrahedraMesh","page":"API","title":"MoM_Basics.TetrahedraMesh","text":"HexahedraMesh{IT, FT} <: MeshDataType\n\n四面体网格文件，包括四面体数 tetranum、节点 node、构成四面体的节点 id 数组 tetrahedras 等信息。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.TriangleInfo","page":"API","title":"MoM_Basics.TriangleInfo","text":"TriangleInfo{IT<: Integer, FT<:AbstractFloat} <: SurfaceCellType{IT, FT}\n\n三角形信息结构体：\n\ntriID       ::IT                    编号\narea        ::FT                    面积\nverticesID  ::MVector{3, IT}        所在节点id\nvertices    ::MMatrix{3, 3, FT, 9}  三角形3个角点坐标，每列为一个点\ncenter      ::MVec3D{FT}            中心坐标\nfacen̂       ::MVec3D{FT}            面的外法向量\nedgel       ::MVec3D                三边长\nedgev̂       ::MMatrix{3, 3, FT, 9}  三个边的指向向量\nedgen̂       ::MMatrix{3, 3, FT, 9}  三个边的外法向量\ninBfsID     ::MVector{3, IT}        三角形所在的三个基函数的ID\n\n合理安排位置后，三个基函数的自由端即为三角形三个点的顺序。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.TriangleInfo-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.TriangleInfo","text":"TriangleInfo{IT, FT}(triID::IT = zero(IT)) where {IT <: Integer, FT<:AbstractFloat}\n\nTriangleInfo 的默认构造函数，除了输入的编号 triID 外所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.TriangleMesh","page":"API","title":"MoM_Basics.TriangleMesh","text":"TriangleMesh{IT, FT} <: MeshDataType\n\n三角形网格文件，包括三角形数 trinum、节点 node、构成三角形的节点 id 数组 triangles 等信息。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.Tris4Tetra","page":"API","title":"MoM_Basics.Tris4Tetra","text":"TriangleInfo{IT<: Integer, FT<:AbstractFloat} <: SurfaceCellType{IT, FT}\n\n构成四面体的三角形信息结构体：\n\nisbd        ::Bool                  是否在边界上\nδκ          ::Complex{FT}           面两侧介质对比度差值\nvertices    ::MMatrix{3, 3, FT, 9}  三角形3个角点坐标，每列为一个点\nedgel       ::MVec3D{FT}            三边长\nedgev̂       ::MMatrix{3, 3, FT, 9}  三个边的指向向量\nedgen̂       ::MMatrix{3, 3, FT, 9}  三个边的外法向量\n\n合理安排位置后，三个基函数的自由端即为三角形三个点的顺序。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.Tris4Tetra-Union{Tuple{}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.Tris4Tetra","text":"Tris4Tetra{IT, FT}() where {IT <: Integer, FT<:AbstractFloat}\n\nTris4Tetra 的默认构造函数，默认在边界上，其它所有元素置零。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.VSBFTstruct","page":"API","title":"MoM_Basics.VSBFTstruct","text":"创建结构体保存面、体基函数类型。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.VSCellType","page":"API","title":"MoM_Basics.VSCellType","text":"网格体、面元\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.VecCart2SphereMat","page":"API","title":"MoM_Basics.VecCart2SphereMat","text":"VecCart2SphereMat{T} <: FieldVector{3, Vec3D{T}}\n\n矢量坐标系（直角 → 球）转换矩阵\n\nr_hat   ::  Vec3DCart{T}    r 方向的单位向量\nθ_hat   ::  Vec3DCart{T}    θ 方向的单位向量\nϕ_hat   ::  Vec3DCart{T}    ϕ 方向的单位向量\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.VecCart2SphereMat-Union{Tuple{θϕInfo{FT}}, Tuple{FT}} where FT<:AbstractFloat","page":"API","title":"MoM_Basics.VecCart2SphereMat","text":"VecCart2SphereMat{FT}(θϕ::θϕInfo{FT}) where{FT<:AbstractFloat}\n\nVecCart2SphereMat在给定方向 θϕ 的构造函数。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.VolumeCellType","page":"API","title":"MoM_Basics.VolumeCellType","text":"体元\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.r̂θϕInfo","page":"API","title":"MoM_Basics.r̂θϕInfo","text":"r̂θϕInfo{FT<:Real}\n\nr̂ θ ϕ 空间角度信息类型，保存以避免大量重复计算\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.r̂θϕInfo-Union{Tuple{AbstractVector{FT}}, Tuple{FT}} where FT<:Real","page":"API","title":"MoM_Basics.r̂θϕInfo","text":"r̂θϕInfo{FT}(rvec::AbstractVector{FT}) where {FT<:Real}\n\n输入直角坐标角度 rvec 构造 r̂θϕInfo 实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.r̂θϕInfo-Union{Tuple{}, Tuple{FT}, Tuple{FT, FT}} where FT<:Real","page":"API","title":"MoM_Basics.r̂θϕInfo","text":"r̂θϕInfo(θ::FT = zero(FT), ϕ::FT = zero(FT)) where {FT<:Real}\nr̂θϕInfo(θ::∠Info{FT}, ϕ::∠Info{FT}) where {FT<:Real}\nr̂θϕInfo(θ::FT, ϕ::∠Info{FT}) where {FT<:Real}\nr̂θϕInfo(θ::∠Info{FT}, ϕ::FT) where {FT<:Real}\n\nr̂θϕInfo 的构造函数 输入角度 θ 和 ϕ 构造 r̂θϕInfo 实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.θϕInfo","page":"API","title":"MoM_Basics.θϕInfo","text":"θϕInfo{FT<:Real}\n\nθ ϕ 空间角度信息类型，保存以避免大量重复计算。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.θϕInfo-Union{Tuple{AbstractVector{FT}}, Tuple{FT}} where FT<:Real","page":"API","title":"MoM_Basics.θϕInfo","text":"θϕInfo{FT}(rvec::AbstractVector{FT}) where {FT<:Real}\n\n输入直角坐标角度 rvec 构造 θϕInfo 实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.θϕInfo-Union{Tuple{}, Tuple{FT}, Tuple{FT, FT}} where FT<:Real","page":"API","title":"MoM_Basics.θϕInfo","text":"θϕInfo{FT}(θ::FT = zero(FT), ϕ::FT = zero(FT)) where {FT<:Real}\nθϕInfo(θ::FT, ϕ::FT) where {FT<:Real}\nθϕInfo{FT}(θ::∠Info{FT}, ϕ::∠Info{FT}) where {FT<:Real}\nθϕInfo{FT}(θ::FT, ϕ::∠Info{FT}) where {FT<:Real}\nθϕInfo{FT}(θ::∠Info{FT}, ϕ::FT) where {FT<:Real}\n\n输入角度 θ 和 ϕ 构造 θϕInfo 实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.∠Info","page":"API","title":"MoM_Basics.∠Info","text":"∠Info{FT<:Real}\n\n∠ 空间角度信息类型，保存以避免大量重复计算。\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.:*-Union{Tuple{FT}, Tuple{T}, Tuple{VecCart2SphereMat{FT}, StaticArraysCore.StaticArray{Tuple{3}, T, 1}}} where {T<:Number, FT<:AbstractFloat}","page":"API","title":"Base.:*","text":"Base.:*(c2smat::VecCart2SphereMat{FT}, vec3D::Vec3D{T}) where {T<:Number, FT<:AbstractFloat}\n\n重载 * 函数以计算向量在球坐标下的各个分量\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics._nastran_string_to_float-Tuple{Any}","page":"API","title":"MoM_Basics._nastran_string_to_float","text":"_nastran_string_to_float(string)\n\n解析 .nas 文件中的字符串。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.acrossbcrossc-Tuple{Any, Any, Any}","page":"API","title":"MoM_Basics.acrossbcrossc","text":"acrossbcrossc(a, b, c)\n\n更高效地计算矢量连续叉乘：a  b  c = (ca)b - (cb)a\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.add_phase!-Union{Tuple{FT}, Tuple{MagneticDipole{FT}, Any}} where FT<:Real","page":"API","title":"MoM_Basics.add_phase!","text":"add_phase!(md::MagneticDipole{FT}, phase) where {FT <: Real}\n\n为磁偶极 md 附加相位 phase。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.antennaArray","page":"API","title":"MoM_Basics.antennaArray","text":"antennaArray(arysize, aryorient, dgap = Tuple(fill(Params.λ_0/2, length(arysize)));\nsourceConstructer, sourceT, sourceorientlc[, orientunit=:rad, coefftype = :uniform, arycenter = zero(MVec3D{Precision.FT})])\n\n提供快捷的阵列构建函数。注意此处输入的阵列、单元指向必须为指定的欧拉角 (ZXZ) eulerRotationMat。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.boundaryRBF-Tuple{Meshes.Hexahedron}","page":"API","title":"MoM_Basics.boundaryRBF","text":"boundaryRBF(h::Hexahedron)\n\n重载面的提取顺序以匹配屋顶基函数 (RBF) 在六面体中的面按 \n\nu=1 u=0 v = 1 v = 0 w = 1 w = 0 \n\n的顺序排列。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.byte2other-Tuple{Any, Any}","page":"API","title":"MoM_Basics.byte2other","text":"byte2other(v, mem_unit)\n\n将以字节为单位的内存数据 v 转换为其它单位 mem_unit。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.cart2sphere-Union{Tuple{Vararg{T, 3}}, Tuple{T}} where T","page":"API","title":"MoM_Basics.cart2sphere","text":"cart2sphere(xyz::Vararg{T, 3}) where {T}\n\n将直角坐标 xyz 转换到球坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.cart2sphereMat-Union{Tuple{θϕInfo{FT}}, Tuple{FT}} where FT<:Real","page":"API","title":"MoM_Basics.cart2sphereMat","text":"cart2sphereMat(θϕ::θϕInfo{FT}) where{FT<:Real}\ncart2sphereMat(θ::FT, ϕ::FT) where{FT<:Real}\n\n计算矢量坐标系（直角 → 球）转换矩阵。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.constructFloat2IndexDict-Union{Tuple{AbstractVector{FT}}, Tuple{FT}} where FT<:AbstractFloat","page":"API","title":"MoM_Basics.constructFloat2IndexDict","text":"constructFloat2IndexDict(floats::AbstractVector{FT}) where {FT<:AbstractFloat}\n\n构建有序（从小到大）浮点数为键，值为该组数构成的的二重字典，字典值为键的二维数组的线性坐标\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.constructGQ1DID2GQ3DIDVector-Tuple{Any}","page":"API","title":"MoM_Basics.constructGQ1DID2GQ3DIDVector","text":"constructGQ1DID2GQ3DIDVector(gqInfo)\n\n构建从六面体体高斯求积点线性索引到三维索引的数组。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.dist-Union{Tuple{FT}, Tuple{AbstractVector{FT}, AbstractVector{FT}}} where FT<:AbstractFloat","page":"API","title":"MoM_Basics.dist","text":"dist(pa::AbstractVector{FT}, pb::AbstractVector{FT})::FT where {FT<:AbstractFloat}\ndist(pa::Vec3D{FT}, pb::Vec3D{FT})::FT where {FT<:AbstractFloat}\ndist(pa::Vec3D{FT})::FT where {FT<:AbstractFloat}\n\n计算两点之间距离，比使用norm函数更高效。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.eulerRMat2αβγ-Tuple{Any}","page":"API","title":"MoM_Basics.eulerRMat2αβγ","text":"eulerRMat2αβγ(l2gMat)\n\n通过局部坐标到全局坐标的旋转矩阵 l2gMat 计算欧拉角。 旋转矩阵按绕 “z轴” → “x轴” → “z轴”的顺序，分别旋转 α, β, γ 度得到，本函数计算对应的三个角度 α, β, γ。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.eulerRotationMat-Union{Tuple{FT}, Tuple{FT, FT, FT}, Tuple{FT, FT, FT, Symbol}} where FT<:Real","page":"API","title":"MoM_Basics.eulerRotationMat","text":"eulerRotationMat(α::FT, β::FT, γ::FT, unit::Symbol) where{FT<:Real}\n\n根据坐标旋转的欧拉角计算旋转矩阵, 定义旋转顺序为： “滚动” → “俯仰” → “偏航”， 即按绕 “z轴” → “x轴” → “z轴”的顺序，分别旋转 α, β, γ 度 Wikipedia-Euler_angles 输入： α, β, γ, 旋转角度信息 unit: 输入角度值单位，默认为 :rad，可选 :deg 输出： rotMat :: SMatrix{3, 3, FT}, 坐标旋转矩阵 rotMat * vec 将 vec 从局部坐标转换回全局坐标\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.eulerRotationMat-Union{Tuple{FT}, Tuple{FT, FT}, Tuple{FT, FT, Symbol}} where FT<:AbstractFloat","page":"API","title":"MoM_Basics.eulerRotationMat","text":"eulerRotationMat(θ::FT, ϕ::FT, unit::Symbol) where{FT<:AbstractFloat}\n\n计算转到给定指向 θ, ϕ 处的旋转矩阵，旋转一步到位，不发生自旋。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.eulerRotationMat-Union{Tuple{FT}, Tuple{StaticArraysCore.StaticArray{Tuple{3}, FT, 1}, FT}, Tuple{StaticArraysCore.StaticArray{Tuple{3}, FT, 1}, FT, Symbol}} where FT<:Real","page":"API","title":"MoM_Basics.eulerRotationMat","text":"eulerRotationMat(axis::Vec3D{FT}, θ::FT, unit::Symbol) where{FT<:Real}\n\n计算天线阵按给定任意轴 axis, 旋转 θ` 角度的旋转矩阵。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.eulerZunit-Union{Tuple{FT}, Tuple{FT, FT, FT, Symbol}} where FT<:Real","page":"API","title":"MoM_Basics.eulerZunit","text":"eulerZunit(α::FT, β::FT, γ::FT, unit::Symbol) where{FT<:Real}\n\n计算给定欧拉角局部坐标 z 轴在全局坐标中的位置单位向量。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getBFTfromCellT-Union{Tuple{Type{T}}, Tuple{T}} where T<:TriangleInfo","page":"API","title":"MoM_Basics.getBFTfromCellT","text":"根据网格元（如三角形、四边形、四面体、六面体等）获取基函数信息用于快速计算当前单元采用的基函数\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getBFsFromMeshData-Tuple{Any}","page":"API","title":"MoM_Basics.getBFsFromMeshData","text":"getBFsFromMeshData(meshData; sbfT = :nothing, vbfT = :nothing)\n\n通过网格信息 meshData 创建基函数信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getCellsBFs-Tuple{Any, Any}","page":"API","title":"MoM_Basics.getCellsBFs","text":"getCellsBFs(meshData, vbfT)\n\n根据读取的网格数据生成网格元 + 基函数信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getCellsBFsFromFileName-Tuple{Any}","page":"API","title":"MoM_Basics.getCellsBFsFromFileName","text":"getCellsBFsFromFileName(meshFileName; meshUnit = MeshUnit, sbfT = :RWG, vbfT = :nothing)\n\n通过文件名 meshFileName 直接读取网格元、创建基函数信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getCellsFromFileName-Tuple{Any}","page":"API","title":"MoM_Basics.getCellsFromFileName","text":"getCellsFromFileName(meshFileName; meshUnit = MeshUnit, sbfT = :RWG, vbfT = :nothing)\n\n通过文件名 meshFileName 直接读取网格元。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getConnectionMatrix-Tuple{Any}","page":"API","title":"MoM_Basics.getConnectionMatrix","text":"getConnectionMatrix(meshData)\n\n通过 meshData 获取节点与网格元之间的连接稀疏矩阵。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVIDFromGQ3DID-Tuple{Tuple{Int64, Int64, Int64}, Integer}","page":"API","title":"MoM_Basics.getFreeVIDFromGQ3DID","text":"getFreeVIDFromGQ3DID(GQ3DID::NTuple{3, Int}, i::Integer)\n\n得到第 i 个面所在的基函数的 正常高斯求积 下，三维坐标为 GQ3DID 的高斯求积点的 “自由端r₀” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVIDFromGQ3DIDSSglr-Tuple{Tuple{Int64, Int64, Int64}, Integer}","page":"API","title":"MoM_Basics.getFreeVIDFromGQ3DIDSSglr","text":"getFreeVIDFromGQ3DIDSSglr(GQ3DID::NTuple{3, Int}, i::Integer)\n\n得到第 i 个面所在的基函数的 处理超奇异性时，三维坐标为 GQ3DID 的高斯求积点的 “自由端r₀” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVIDFromGQ3DIDSglr-Tuple{Tuple{Int64, Int64, Int64}, Integer}","page":"API","title":"MoM_Basics.getFreeVIDFromGQ3DIDSglr","text":"getFreeVIDFromGQ3DIDSglr(GQ3DID::NTuple{3, Int}, i::Integer)\n\n得到第 i 个面所在的基函数的 处理奇异性时，三维坐标为 GQ3DID 的高斯求积点的 “自由端r₀” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVns-Tuple{HexahedraInfo, Integer}","page":"API","title":"MoM_Basics.getFreeVns","text":"getFreeVns(hexa::HexahedraInfo, i::Integer)\n\n得到六面体 hexa 第 i 个所在的基函数的 所有自由端( r₀ )。 该面定义为 uvw 坐标中某值为 1(0) 的面， 自由端应定义为在该面的 uvw 坐标中，将该值赋值为 0(1) 时计算得到的点 如 u = 1 的面为六面体的第 (2673) 个点构成的面，r₀ 为 uvw  坐标为 (0 v w) 的点，此点等同于 u = 0 的面的四边形的参数坐标为 (v, w) 的点  在构造 RBF 时面按照 按 u=1 u=0 v = 1 v = 0 w = 1 w = 0 的顺序排列,  因此函数根据输入的面的序号进行计算。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVnsSSglr-Tuple{HexahedraInfo, Integer}","page":"API","title":"MoM_Basics.getFreeVnsSSglr","text":"getFreeVnsSSglr(hexa::HexahedraInfo, i::Integer)\n\n得到六面体 hexa 处理超奇异性时第 i 个所在的基函数的 所有自由端( r₀ )。 定义详见getFreeVns\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getFreeVnsSglr-Tuple{HexahedraInfo, Integer}","page":"API","title":"MoM_Basics.getFreeVnsSglr","text":"getFreeVns(hexa::HexahedraInfo, i::Integer)\n\n得到六面体 hexa 处理奇异性时第 i 个所在的基函数的 所有自由端( r₀ )。 定义详见getFreeVns\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPHexa-Union{Tuple{IT}, Tuple{HexahedraInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPHexa","text":"getGQPHexa(hexa::HexahedraInfo, ii::IT) where {IT <: Integer}\ngetGQPHexa(hexa::HexahedraInfo)\n\n计算 hexa 正常求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPHexaSSglr-Union{Tuple{IT}, Tuple{HexahedraInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPHexaSSglr","text":"getGQPHexaSSglr(hexa::HexahedraInfo, ii::IT) where {IT <: Integer}\ngetGQPHexaSSglr(hexa::HexahedraInfo)\n\n计算 hexa 处理超奇异性求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPHexaSglr-Union{Tuple{IT}, Tuple{HexahedraInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPHexaSglr","text":"getGQPHexaSglr(hexa::HexahedraInfo, ii::IT) where {IT <: Integer}\ngetGQPHexaSglr(hexa::HexahedraInfo)\n\n计算 hexa 处理奇异性求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPQuad-Union{Tuple{IT}, Tuple{Quads4Hexa, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPQuad","text":"getGQPQuad(quad::Quads4Hexa, ii::IT) where {IT <: Integer}\ngetGQPQuad(quad::Quads4Hexa)\n\n计算 quad 正常求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPQuadSSglr-Union{Tuple{IT}, Tuple{Quads4Hexa, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPQuadSSglr","text":"getGQPQuadSSglr(quad::Quads4Hexa, ii::IT) where {IT <: Integer}\ngetGQPQuadSSglr(quad::Quads4Hexa)\n\n计算 quad 处理超奇异性的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPQuadSglr-Union{Tuple{IT}, Tuple{Quads4Hexa, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPQuadSglr","text":"getGQPQuadSglr(quad::Quads4Hexa, ii::IT) where {IT <: Integer}\ngetGQPQuadSglr(quad::Quads4Hexa)\n\n计算 quad 处理奇异性的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTetra-Union{Tuple{IT}, Tuple{TetrahedraInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTetra","text":"getGQPTetra(tetra::TetrahedraInfo, i::IT) where {IT <: Integer}\ngetGQPTetra(tetra::TetrahedraInfo)\n\n计算 tetra 正常求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTetraSglr-Union{Tuple{IT}, Tuple{TetrahedraInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTetraSglr","text":"getGQPTetraSglr(tetra::TetrahedraInfo, i::IT) where {IT <: Integer}\ngetGQPTetraSglr(tetra::TetrahedraInfo)\n\n计算 tetra 处理奇异性求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTri-Union{Tuple{IT}, Tuple{TriangleInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTri","text":"getGQPTri(tri::TriangleInfo, i::IT) where {IT <: Integer}\ngetGQPTri(tri::TriangleInfo)\n\n计算 tri 正常求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTri-Union{Tuple{IT}, Tuple{Tris4Tetra, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTri","text":"getGQPTri(tri::Tris4Tetra, i::IT) where {IT <: Integer}\ngetGQPTri(tri::Tris4Tetra)\n\n计算 tri 正常求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTriSglr-Union{Tuple{IT}, Tuple{TriangleInfo, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTriSglr","text":"getGQPTriSglr(tri::TriangleInfo, i::IT) where {IT <: Integer}\ngetGQPTriSglr(tri::TriangleInfo)\n\n计算 tri 处理奇异性求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getGQPTriSglr-Union{Tuple{IT}, Tuple{Tris4Tetra, IT}} where IT<:Integer","page":"API","title":"MoM_Basics.getGQPTriSglr","text":"getGQPTriSglr(tri::Tris4Tetra, i::IT) where {IT <: Integer}\ngetGQPTriSglr(tri::Tris4Tetra)\n\n计算 tri 处理奇异性求积的第 i 个或所有高斯求积坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getHexasInfo-Union{Tuple{FT}, Tuple{IT}, Tuple{HexahedraMesh{IT, FT}, Symbol}} where {IT, FT}","page":"API","title":"MoM_Basics.getHexasInfo","text":"getHexasInfo(hexameshData::HexahedraMesh{IT, FT}, VolumeBFType::Symbol) where{IT, FT}\n\n根据六面体网格信息 hexameshData 和体基函数类型 VolumeBFType 生成网格信息向量 hexasInfo 和基函数信息向量 bfsInfo 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getMeshData-Tuple{String}","page":"API","title":"MoM_Basics.getMeshData","text":"getMeshData(meshFileName::String; meshUnit=:mm)\n\n读取文件中的节点坐标、三角形点、四面体点、六面体点\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getNodeElems-Union{Tuple{T}, Tuple{ST}, Tuple{Val{:DAT}, ST}} where {ST<:AbstractString, T<:AbstractFloat}","page":"API","title":"MoM_Basics.getNodeElems","text":"getNodeElems(::Val{:DAT}, pathname::ST; FT::Type{T}=Precision.FT, meshUnit = :m) where {ST <: AbstractString,T<:AbstractFloat}\n\n读取 .dat 格式的自定义项目文件。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getNodeElems-Union{Tuple{T}, Tuple{ST}, Tuple{Val{:NAS}, ST}} where {ST<:AbstractString, T<:AbstractFloat}","page":"API","title":"MoM_Basics.getNodeElems","text":"getNodeElems(::Val{:NAS}, pathname::ST; FT::Type{T}=Precision.FT, meshUnit = :mm) where {ST <: AbstractString,T<:AbstractFloat}\n\n读取 .nas 文件中的节点坐标、三角形点、四面体点、六面体点。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getNodeElems-Union{Tuple{T}, Tuple{ST}, Tuple{Val{:VTK}, ST}} where {ST<:AbstractString, T<:AbstractFloat}","page":"API","title":"MoM_Basics.getNodeElems","text":"getNodeTriTetraHexaVtk(pathname::ST; FT::Type{T}=Precision.FT, meshUnit = :m) where {ST <: AbstractString,T<:AbstractFloat}\n\n读取 .vtk 文件中的节点坐标、三角形点、四面体点、六面体点(目前不支持六面体)。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getTetrasInfo-Union{Tuple{FT}, Tuple{IT}, Tuple{MoM_Basics.TetrahedraMesh{IT, FT}, Symbol}} where {IT, FT}","page":"API","title":"MoM_Basics.getTetrasInfo","text":"getTetrasInfo(tetrameshData::TetrahedraMesh{IT, FT}, VolumeBFType::Symbol) where{IT, FT}\n\n根据四面体网格信息 tetrameshData 和体基函数类型 VolumeBFType 生成网格信息向量 tetrasInfo 和基函数信息向量 bfsInfo 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.getTriangleInfo-Union{Tuple{TriangleMesh{IT, FT}}, Tuple{FT}, Tuple{IT}} where {IT, FT}","page":"API","title":"MoM_Basics.getTriangleInfo","text":"getTriangleInfo(trianglemeshData::TriangleMesh{IT, FT}) where{IT, FT}\n\n根据网格信息 trianglemeshData 生成三角形信息 trianglesInfo 、RWG基函数信息 rwgsInfo。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.globalObs2LocalObs-Union{Tuple{FT}, Tuple{Array{r̂θϕInfo{FT}, 2}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where FT","page":"API","title":"MoM_Basics.globalObs2LocalObs","text":"globalObs2LocalObs(r̂θϕs_obs::Matrix{r̂θϕInfo{FT}}, l2gRot::StaticMatrix{3,3, FT}) where {FT}\n\n根据全局观测空间角度信息 r̂θϕs_obs 计算给定局部至全局坐标旋转矩阵 l2gRot 下局部坐标的观测空间角度信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.globalrvec2Local-Union{Tuple{FT}, Tuple{T}, Tuple{AbstractVector{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}, StaticArraysCore.StaticArray{Tuple{3}, FT, 1}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.globalrvec2Local","text":"globalrvec2Local(rvecglobal::Vec3D{T}, l2gRot::StaticMatrix{3,3, FT}, r0InGlobal::Vec3D{FT}) where {T<:Number, FT<:Real}\n\n计算全局向量 rvecglobal 在给定局部至全局坐标旋转矩阵 l2gRot 下的局部坐标，局部坐标的原点在全局坐标的 r0InGlobal 处。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.globalrvec2Local-Union{Tuple{FT}, Tuple{T}, Tuple{AbstractVector{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.globalrvec2Local","text":"globalrvec2Local(rvecglobal::Vec3D{T}, l2gRot::StaticMatrix{3,3, FT}) where {T<:Number, FT<:Real}\n\n计算全局向量 rvecglobal 在给定局部至全局坐标旋转矩阵 l2gRot 下的局部坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.globalrvec2Local-Union{Tuple{FT}, Tuple{T}, Tuple{Matrix{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}, AbstractVector{FT}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.globalrvec2Local","text":"globalrvec2Local(rvecsglobal::Matrix{T}, l2gRot::StaticMatrix{3,3, FT}, r0InGlobal::Vec3D{FT}) where {T<:Number, FT<:Real}\n\n计算全局向量组成的矩阵 rvecsglobal 在给定局部至全局坐标旋转矩阵 l2gRot 下的局部坐标，局部坐标的原点在全局坐标的 r0InGlobal 处。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.globalrvec2Local-Union{Tuple{FT}, Tuple{T}, Tuple{Matrix{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.globalrvec2Local","text":"globalrvec2Local(rvecsglobal::Matrix{T}, l2gRot::StaticMatrix{3,3, FT}) where {T<:Number, FT<:Real}\n\n计算全局向量组成的矩阵 rvecsglobal 在给定局部至全局坐标旋转矩阵 l2gRot 下的局部坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.greenfunc-Tuple{T} where T<:AbstractFloat","page":"API","title":"MoM_Basics.greenfunc","text":"greenfunc(R::T) where {T<:AbstractFloat}\ngreenfunc(pa::Vec3D{T}, pb::Vec3D{T}) where {T<:AbstractFloat}\ngreenfunc(pa::AbstractVector{T}, pb::AbstractVector{T}) where {T<:AbstractFloat}\ngreenfunc(R::T, k::T) where {T<:AbstractFloat}\ngreenfunc(pa::Vec3D{T}, pb::Vec3D{T}, k::T) where {T<:AbstractFloat}\n\n计算归一化自由空间格林函数 g(R) =  exp^-1im*K_0*RR\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.initialize_time_and_mem-Tuple{}","page":"API","title":"MoM_Basics.initialize_time_and_mem","text":"initialize_time_and_mem()\n\n初始化计时器 timer 和内存记录 memory。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.inputBasicParameters-Union{Tuple{}, Tuple{FT}} where FT<:AbstractFloat","page":"API","title":"MoM_Basics.inputBasicParameters","text":"inputBasicParameters(;frequency::FT = 1e8, ieT::Symbol = :EFIE, CFIEα::FT = 0.6,\nmeshfilename::String = SimulationParams.meshfilename) where {FT<:AbstractFloat}\n\n输入频率参数 frequency，修改其它仿真参数的函数； 积分方程类型参数 ieT，修改计算过程中采用的积分方程； CFIE混合系数 CFIEα、网格文件名 meshfilename。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.localObs2GlobalObs-Union{Tuple{FT}, Tuple{Array{r̂θϕInfo{FT}, 2}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where FT","page":"API","title":"MoM_Basics.localObs2GlobalObs","text":"localObs2GlobalObs(r̂θϕs_obs::Matrix{r̂θϕInfo{FT}}, l2gRot::StaticMatrix{3,3, FT}) where {FT}\n\n根据局部观测空间角度信息 r̂θϕs_obs 计算给定局部至全局坐标旋转矩阵 l2gRot 下全局坐标的观测空间角度信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.localrvec2Global-Union{Tuple{FT}, Tuple{T}, Tuple{AbstractVector{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}, StaticArraysCore.StaticArray{Tuple{3}, FT, 1}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.localrvec2Global","text":"localrvec2Global(rvecslocal::Vec3D{T}, l2gRot::StaticMatrix{3,3, FT}, r0InGlobal::Vec3D{FT}) where {T<:Number, FT<:Real}\n\n计算局部向量 rveclocal 在给定局部至全局坐标旋转矩阵 l2gRot 下的全局坐标，局部坐标的原点在全局坐标的 r0InGlobal 处。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.localrvec2Global-Union{Tuple{FT}, Tuple{T}, Tuple{AbstractVector{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.localrvec2Global","text":"localrvec2Global(rvecslocal::Vec3D{T}, l2gRot::StaticMatrix{3,3, FT}) where {T<:Number, FT<:Real}\n\n计算局部向量 rveclocal 在给定局部至全局坐标旋转矩阵 l2gRot 下的全局坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.localrvec2Global-Union{Tuple{FT}, Tuple{T}, Tuple{Matrix{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}, AbstractVector{FT}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.localrvec2Global","text":"localrvec2Global(rvecslocal::Matrix{T}, l2gRot::StaticMatrix{3,3, FT}, r0InGlobal::Vec3D{FT}) where {T<:Number, FT<:Real}\n\n计算局部向量组成的矩阵 rvecslocal 在给定局部至全局坐标旋转矩阵 l2gRot 下的全局坐标，局部坐标的原点在全局坐标的 r0InGlobal 处。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.localrvec2Global-Union{Tuple{FT}, Tuple{T}, Tuple{Matrix{T}, StaticArraysCore.StaticArray{Tuple{3, 3}, FT, 2}}} where {T<:Number, FT<:Real}","page":"API","title":"MoM_Basics.localrvec2Global","text":"localrvec2Global(rvecslocal::Matrix{T}, l2gRot::StaticMatrix{3,3, FT}) where {T<:Number, FT<:Real}\n\n计算局部向量组成的矩阵 rvecslocal 在给定局部至全局坐标旋转矩阵 l2gRot 下的全局坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.modiParams!-NTuple{16, Any}","page":"API","title":"MoM_Basics.modiParams!","text":"modiParams!(   frequency, ω_0, K_0, λ_0, JKη_0, Jη_0divK, JK_0,\n                    k², divJω, mk²div9, mJη_0div4πK, \n                    C4divk², JKηdiv16π, div9Jω, Rsglr, CFIEα)\n\n输入所有参数修改仿真参数的实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.modiSimulationParams!-Tuple{}","page":"API","title":"MoM_Basics.modiSimulationParams!","text":"modiSimulationParams!(;ieT::Symbol=SimulationParams.ieT, \nmeshfilename::String = SimulationParams.meshfilename, \nmeshunit = SimulationParams.meshunit,\nSHOWIMAGE = SimulationParams.SHOWIMAGE,\ndiscreteVar = SimulationParams.discreteVar\n)\n\nieT         ::Symbol, 积分方程类型，包括 EFIE, MFIE, CFIE等\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.nodes2Poles-Union{Tuple{Matrix{FT}}, Tuple{FT}} where FT","page":"API","title":"MoM_Basics.nodes2Poles","text":"nodes2Poles(nodes::Matrix{FT}) where {FT}\n\n将球面散点 nodes 转化为角度信息实例 r̂θϕInfo 数组。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.radiationDirectionCoeff-Union{Tuple{FT}, Tuple{MagneticDipole, θϕInfo{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.radiationDirectionCoeff","text":"radiationDirectionCoeff(md::MagneticDipole{FT}, θϕ::θϕInfo{FT}) where {FT<:Real}\n\n计算方向性系数：D_m(θ ϕ) = 4π U_m(θ ϕ)P_rad。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.radiationIntegralL0-Union{Tuple{FT}, Tuple{MagneticDipole, θϕInfo{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.radiationIntegralL0","text":"radiationIntegralL0(md::MagneticDipole, θϕ::θϕInfo{FT}) where {FT<:Real}\n\n磁偶极子的远场辐射积分计算函数，注意 θϕ 为偶极子的局部坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.radiationIntensityU_m-Union{Tuple{FT}, Tuple{MagneticDipole, θϕInfo{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.radiationIntensityU_m","text":"radiationIntensityU_m(md::MagneticDipole{FT}, θϕ::θϕInfo{FT}) where {FT<:Real}\n\n计算磁流源的辐射强度函数 U_m(θ ϕ) = fracY_08λ_0²(L_θ² + L_ϕ²)。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.radiationPower-Tuple{MagneticDipole}","page":"API","title":"MoM_Basics.radiationPower","text":"radiationPower(md::MagneticDipole{FT}) where {FT<:Real}\n\n计算辐射功率。 P_rad =   U(θ ϕ)sinθ  dθdϕ 对磁偶极子可直接在源缝表面积分： P_rad =  E(r)²(2η₀) dxdy\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.random_rhat-Tuple{}","page":"API","title":"MoM_Basics.random_rhat","text":"random_rhat(; FT = Precision.FT)\n\n随机生成单位向量。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.record_BFsInfo-Tuple{Symbol, Int64}","page":"API","title":"MoM_Basics.record_BFsInfo","text":"record_BFsInfo(bfT::Symbol, nbf::Int; io::IO = Core.stdout)\n\n在 io 中记录基函数类型 bfT 和数量 nbf。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.record_CellInfo","page":"API","title":"MoM_Basics.record_CellInfo","text":"record_CellInfo(io::IO = Core.stdout; ntri = 0, ntetra = 0, nhexa = 0)\nrecord_CellInfo(meshData; io::IO = Core.stdout)\n\n在 io 中记录网格单元数量 ntri, ntetra, nhexa。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.rwgbfConstructerTrianglesInfoModifiers!-Union{Tuple{FT}, Tuple{IT}, Tuple{TriangleMesh, Array{TriangleInfo{IT, FT}, 1}}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.rwgbfConstructerTrianglesInfoModifiers!","text":"rwgbfConstructerTrianglesInfoModifiers!(trianglemeshData::TriangleMesh, trianglesInfo::Vector{TriangleInfo{IT, FT}}) where {IT<:Integer, FT<:AbstractFloat}\n\n此函数采用排序算法，将每个边的两个点、在三角形中的对点、三角形、基函数等属性信息放在一个大数组中， 通过对不同的属性排序（如按边所在点随数组排序即可将边相同的点放在一起），即可得到基函数分组信息，以此可构造RWG基函数。 函数完成以下功能：\n\n构造基函数类型实例数组（类似结构化数组）rwgsInfo记录基函数相关信息，并作为返回值；\n写入三角形类型实例数组trianglesInfo中关于基函数的信息。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.rwgbfnohalfConstructerTrianglesInfoModifiers!-Union{Tuple{FT}, Tuple{IT}, Tuple{TriangleMesh, Array{TriangleInfo{IT, FT}, 1}}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.rwgbfnohalfConstructerTrianglesInfoModifiers!","text":"rwgbfnohalfConstructerTrianglesInfoModifiers!(trianglemeshData::TriangleMesh, trianglesInfo::Vector{TriangleInfo{IT, FT}}) where {IT<:Integer, FT<:AbstractFloat}\n\n此函数与rwgbfConstructerTrianglesInfoModifiers!基本一致，不同在于不生成半基函数。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.saveSimulationParams-Tuple{}","page":"API","title":"MoM_Basics.saveSimulationParams","text":"saveSimulationParams(;meshfilename::String = SimulationParams.meshfilename, \nsbfT::Symbol = SimulationParams.sbfT, vbfT::Symbol = SimulationParams.vbfT)\n\n保存仿真参数到结果文件中。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.second_to_other-Tuple{Any, Any}","page":"API","title":"MoM_Basics.second_to_other","text":"second_to_other(v, time_unit)\n\n将以秒为单位的时间数据 v 转换为其它单位 time_unit。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.selectFreeVnID-Union{Tuple{FT}, Tuple{AbstractVector{FT}, Integer}} where FT","page":"API","title":"MoM_Basics.selectFreeVnID","text":"selectFreeVnID(uvw::AbstractVector{FT}, i::Integer) where {FT}\n\n根据 uvw 计算得到第 i 个面所在的基函数的 正常高斯求积 时 “自由端( r₀ )” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.selectFreeVnSSglrID-Union{Tuple{FT}, Tuple{AbstractVector{FT}, Integer}} where FT","page":"API","title":"MoM_Basics.selectFreeVnSSglrID","text":"selectFreeVnSSglrID(uvw::AbstractVector{FT}, i::Integer) where {FT}\n\n根据 uvw 得到第 i 个面所在的基函数的 处理超奇异性 求积时 “自由端( r₀ )” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.selectFreeVnSglrID-Union{Tuple{FT}, Tuple{AbstractVector{FT}, Integer}} where FT","page":"API","title":"MoM_Basics.selectFreeVnSglrID","text":"selectFreeVnSglrID(uvw::AbstractVector{FT}, i::Integer) where {FT}\n\n根据 uvw 得到第 i 个面所在的基函数的 处理奇异性 求积时 “自由端( r₀ )” 的序号。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setGeosPermittivity!-Union{Tuple{AbstractVector{VT}}, Tuple{CT}, Tuple{VT}, Tuple{AbstractVector{VT}, CT}} where {VT<:TriangleInfo, CT<:Complex}","page":"API","title":"MoM_Basics.setGeosPermittivity!","text":"setGeosPermittivity!(geosInfo::AbstractVector{VT}, εᵣ::CT = 1.0(1+0im)) where {VT<:TriangleInfo, CT<:Complex}\n\n设置三角形网格介电常数，目前为空派发以方便体面积分方程计算中的多重派发。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setGeosPermittivity!-Union{Tuple{AbstractVector{VT}}, Tuple{CT}, Tuple{VT}, Tuple{AbstractVector{VT}, CT}} where {VT<:VSCellType, CT<:Complex}","page":"API","title":"MoM_Basics.setGeosPermittivity!","text":"setGeosPermittivity!(geosInfo::AbstractVector{VT}, εᵣ::CT = 1.0(1+0im)) where {VT<:VSCellType, CT<:Complex}\nsetGeosPermittivity!(geosInfo::AbstractVector{VT}, εᵣs::T) where {VT<:VSCellType, T<:AbstractVector}\nsetGeosPermittivity!(geosInfo::AbstractVector{VT}, εᵣ::CT = 1.0(1+0im)) where {VT<:AbstractVector, CT<:Complex}\n\n设置四面体、六面体的介电常数 εᵣ ，并同时设置介质对比度，修改此函数以得到对应的数据。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setHexaCoor!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{Array{HexahedraInfo{IT, FT, CT}, 1}, HexahedraMesh{IT, FT}}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.setHexaCoor!","text":"setHexaCoor!( hexasInfo::Vector{HexahedraInfo{IT, FT, CT}}, hexaMeshData::HexahedraMesh{IT, FT}) where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}\n\n在预分配好的六面体数组 hexasInfo 里写入 hexaMeshData 中对应的六面体编号、点坐标、中心位置数据。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setHexaParam!-Union{Tuple{Array{HexahedraInfo{IT, FT, CT}, 1}}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.setHexaParam!","text":"setHexaParam!(hexasInfo::Vector{HexahedraInfo{IT, FT, CT}}) where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}\n\n计算六面体体积、面外法向量、面积，并写入 hexasInfo 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setPrecision!-Union{Tuple{Type{T}}, Tuple{T}} where T<:Union{Float32, Float64}","page":"API","title":"MoM_Basics.setPrecision!","text":"setPrecision!(FT::Type{T}) where {T<:Union{Float32, Float64}}\n\n设置仿真精度为 FT。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setQuad4Hexas!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{HexahedraMesh{IT, FT}, Array{HexahedraInfo{IT, FT, CT}, 1}, Val{:PWC}}} where {IT, FT, CT}","page":"API","title":"MoM_Basics.setQuad4Hexas!","text":"setQuad4Hexas!(hexameshData::HexahedraMesh{IT, FT}, hexasInfo::Vector{HexahedraInfo{IT, FT, CT}}, ::Val{:PWC}) where {IT, FT, CT}\n\n计算构成六面体的所有四边形，并将这些信息写入六面体 hexasInfo，给分片常数 (PWC) 基函数赋值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setQuad4Hexas!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{HexahedraMesh{IT, FT}, Array{HexahedraInfo{IT, FT, CT}, 1}, Val{:RBF}}} where {IT, FT, CT}","page":"API","title":"MoM_Basics.setQuad4Hexas!","text":"setQuad4Hexas!(hexameshData::HexahedraMesh{IT, FT}, hexasInfo::Vector{HexahedraInfo{IT, FT, CT}}, ::Val{:RBF}) where {IT, FT, CT}\n\n计算构成六面体的所有四边形，并写入六面体 hexasInfo，给屋顶基函数 (RBF) 基函数赋值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setRecordMem!","page":"API","title":"MoM_Basics.setRecordMem!","text":"设置是否开启内存记录\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.setTetraCoor!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{Array{TetrahedraInfo{IT, FT, CT}, 1}, MoM_Basics.TetrahedraMesh{IT, FT}}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.setTetraCoor!","text":"setHexaCoor!( tetrasInfo::Vector{TetrahedraInfo{IT, FT, CT}}, tetraMeshData::TetrahedraMesh{IT, FT}) where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}\n\n在预分配好的四面体数组 tetrasInfo 里写入 tetraMeshData 中对应的四面体编号、点坐标、中心位置数据。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setTetraParam!-Union{Tuple{Array{TetrahedraInfo{IT, FT, CT}, 1}}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}","page":"API","title":"MoM_Basics.setTetraParam!","text":"setTetraParam!(tetrasInfo::Vector{TetrahedraInfo{IT, FT, CT}}) where {IT<:Integer, FT<:AbstractFloat, CT<:Complex}\n\n计算四面体体积、面外法向量、面积，并写入 tetrasInfo 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setTriParam!-Tuple{TriangleInfo}","page":"API","title":"MoM_Basics.setTriParam!","text":"setTriParam!(triangleInfo::TriangleInfo)\n\n计算三角形边长、边外法向量、面法向量、面积，直接写入 triangleInfo 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setTriangles4Tetras!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{MoM_Basics.TetrahedraMesh{IT, FT}, Array{TetrahedraInfo{IT, FT, CT}, 1}, Val{:PWC}}} where {IT, FT, CT}","page":"API","title":"MoM_Basics.setTriangles4Tetras!","text":"setTriangles4Tetras!(tetrameshData::TetrahedraMesh{IT, FT}, tetrasInfo::Vector{TetrahedraInfo{IT, FT, CT}}, ::Val{:PWC}) where {IT, FT, CT}\n\n计算构成四面体的所有三角形，并将这些信息写入四面体 tetrasInfo，给分片常数 (PWC) 基函数赋值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setTriangles4Tetras!-Union{Tuple{CT}, Tuple{FT}, Tuple{IT}, Tuple{MoM_Basics.TetrahedraMesh{IT, FT}, Array{TetrahedraInfo{IT, FT, CT}, 1}, Val{:SWG}}} where {IT, FT, CT}","page":"API","title":"MoM_Basics.setTriangles4Tetras!","text":"setTriangles4Tetras!(tetrameshData::TetrahedraMesh{IT, FT}, tetrasInfo::Vector{TetrahedraInfo{IT, FT, CT}}, ::Val{:SWG}) where {IT, FT, CT}\n\n计算构成四面体的所有三角形，并将这些信息写入四面体 tetrasInfo，给 SWG 基函数赋值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setTricoor!-Union{Tuple{FT}, Tuple{IT}, Tuple{Array{TriangleInfo{IT, FT}, 1}, TriangleMesh{IT, FT}}} where {IT<:Integer, FT<:AbstractFloat}","page":"API","title":"MoM_Basics.setTricoor!","text":"setTricoor!( trianglesInfo::Vector{TriangleInfo{IT, FT}}, TriangleMeshData::TriangleMesh{IT, FT}) where {IT<:Integer, FT<:AbstractFloat}\n\n在预分配好的三角形数组 trianglesInfo 里写入 TriangleMeshData 中对应的三角形编号、点坐标、中心位置数据。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setdiffArray!","page":"API","title":"MoM_Basics.setdiffArray!","text":"setdiffArray!(ary[, dim = 1])\n\n将阵列天线 ary 在 dim 方向一半单元设置为反相位，从而实现差方向图。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.setδκ!-Union{Tuple{AbstractArray{HexahedraInfo{IT, FT, CT}, 1}}, Tuple{CT}, Tuple{FT}, Tuple{IT}} where {IT<:Integer, FT<:Real, CT<:Complex{FT}}","page":"API","title":"MoM_Basics.setδκ!","text":"setδκ!(hexasInfo::AbstractVector{HexahedraInfo{IT, FT, CT}}) where {IT<:Integer, FT<:Real, CT<:Complex{FT}}\n\n设置六面体网格信息 hexasInfo 中每个面上的介质对比度差值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.setδκ!-Union{Tuple{AbstractVector{VT}}, Tuple{VT}} where VT<:VolumeCellType","page":"API","title":"MoM_Basics.setδκ!","text":"setδκ!(geosInfo::AbstractVector{VT}) where {VT<:VolumeCellType}\n\n设置体网格信息 geosInfo 中每个面上的介质对比度差值。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.show_memory_time","page":"API","title":"MoM_Basics.show_memory_time","text":"show_memory_time(io::IO=Core.stdout; mem_unit = :MB, time_unit = :s)\n\n展示时间内存消耗数据记录。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.sincmath-Tuple{T} where T<:Number","page":"API","title":"MoM_Basics.sincmath","text":"sincmath(x::T) where{T<:Number}\n\nJulia 自带 [sinc] 函数计算的是归一化辛格函数:\n\nsinc(x)     =   sin(πx)(πx)\n\n此处借用 sinc，定义数学领域的非归一化 sinc 函数，即计算:\n\nsin(x)x\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceEfield-Tuple{PlaneWave, Any}","page":"API","title":"MoM_Basics.sourceEfield","text":"sourceEfield(plw::PlaneWave, r)\n\n计算平面波 plw 在全局坐标下给定位置 r 处的电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceEfield-Union{Tuple{AT}, Tuple{FT}, Tuple{AT, AbstractVector{FT}}} where {FT<:Real, AT<:AbstractAntennaArray}","page":"API","title":"MoM_Basics.sourceEfield","text":"sourceEfield(ary::AT, rvec::AbstractVector{FT}) where {FT<:Real,  AT<:AbstractAntennaArray}\n\n计算天线阵列 ary 在全局坐标下给定位置 rvec 处的电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceEfield-Union{Tuple{FT}, Tuple{MagneticDipole, AbstractVector{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.sourceEfield","text":"sourceEfield(md::MagneticDipole{FT}, r_observe::Vec3D{FT};  r_coortype::Symbol=:C) where {FT<:Real}\n\n计算磁偶极 md 在全局坐标下给定位置 rvec 处的电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceEfield-Union{Tuple{ST}, Tuple{FT}, Tuple{Vector{ST}, AbstractVector{FT}}} where {FT<:Real, ST<:ExcitingSource}","page":"API","title":"MoM_Basics.sourceEfield","text":"sourceEfield(sources::Vector{ST}, rvec::AbstractVector{FT}) where {FT<:Real, ST<:ExcitingSource}\n\n计算源向量 sources 在全局坐标下给定位置 rvec 处的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceFarEfield-Union{Tuple{AT}, Tuple{FT}, Tuple{AT, r̂θϕInfo{FT}}} where {FT<:AbstractFloat, AT<:AbstractAntennaArray}","page":"API","title":"MoM_Basics.sourceFarEfield","text":"sourceFarEfield(ary::AT, r̂θϕ::r̂θϕInfo{FT}) where {FT<:Real, AT<:AbstractAntennaArray}\n\n计算天线阵列 ary 在全局坐标下给定方向 r̂θϕ 的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceFarEfield-Union{Tuple{FT}, Tuple{MagneticDipole, r̂θϕInfo{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.sourceFarEfield","text":"sourceFarEfield(md::MagneticDipole{FT}, r̂θϕ::r̂θϕInfo{FT}) where {FT<:Real}\n\n计算磁偶极 md 在全局坐标下给定方向 r̂θϕ 的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceFarEfield-Union{Tuple{ST}, Tuple{FT}, Tuple{Vector{ST}, r̂θϕInfo{FT}}} where {FT<:Real, ST<:ExcitingSource}","page":"API","title":"MoM_Basics.sourceFarEfield","text":"sourceFarEfield(sources::Vector{ST}, r̂θϕ::r̂θϕInfo{FT}) where {FT<:Real, ST<:ExcitingSource}\n\n计算源向量 sources 在全局坐标下给定方向 r̂θϕ 的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceHfield-Tuple{PlaneWave, Any}","page":"API","title":"MoM_Basics.sourceHfield","text":"sourceHfield(plw::PlaneWave, r)\n\n计算平面波 plw 在全局坐标下给定位置 r 处的磁场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceLocalEfield-Union{Tuple{AT}, Tuple{FT}, Tuple{AT, AbstractVector{FT}}} where {FT<:Real, AT<:AbstractAntennaArray}","page":"API","title":"MoM_Basics.sourceLocalEfield","text":"sourceLocalEfield(ary::AT, rvec::AbstractVector{FT}) where {FT<:Real,  AT<:AbstractAntennaArray}\n\n计算天线阵列 ary 在阵列局部坐标下给定位置 rvec 处的电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceLocalEfield-Union{Tuple{FT}, Tuple{MagneticDipole, AbstractVector{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.sourceLocalEfield","text":"sourceLocalEfield(md::MagneticDipole{FT}, r_observe::Vec3D{FT};  r_coortype::Symbol=:C) where {FT<:Real}\n\n计算磁偶极 md 在磁偶极局部坐标给定位置 rvec 处的电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceLocalFarEfield-Union{Tuple{AT}, Tuple{FT}, Tuple{AT, r̂θϕInfo{FT}}} where {FT<:AbstractFloat, AT<:AbstractAntennaArray}","page":"API","title":"MoM_Basics.sourceLocalFarEfield","text":"sourceLocalFarEfield(ary::AT, r̂θϕ::r̂θϕInfo{FT}) where {FT<:Real, AT<:AbstractAntennaArray}\n\n计算天线阵列 ary 在阵列坐标下给定方向 r̂θϕ 的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sourceLocalFarEfield-Union{Tuple{FT}, Tuple{MagneticDipole, r̂θϕInfo{FT}}} where FT<:Real","page":"API","title":"MoM_Basics.sourceLocalFarEfield","text":"sourceLocalFarEfield(md::MagneticDipole{FT}, r̂θϕ::r̂θϕInfo{FT}) where {FT<:Real}\n\n计算磁偶极 md 在磁偶极局部坐标下给定方向 r̂θϕ 的远场电场。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.sphere2cart-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T<:Real","page":"API","title":"MoM_Basics.sphere2cart","text":"sphere2cart(coor_sphere::AbstractVector{T}) where T<:Real\nsphere2cart(coor_sphere...)\nsphere2cart(r::T, θϕ::θϕInfo{T}) where T<:Real\n\n将球坐标 coor_sphere 转换到直角坐标。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.updateVSBFTParams!-Tuple{}","page":"API","title":"MoM_Basics.updateVSBFTParams!","text":"updateVSBFTParams!(;sbfT = :nothing, vbfT = :nothing)\n\n通过输入符号更新体、面基函数类型常数实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.updateVSBFTypes!-Tuple{}","page":"API","title":"MoM_Basics.updateVSBFTypes!","text":"updateVSBFTypes!(;sbfType = BasisFunctionType, vbfType = BasisFunctionType)\n\n更新体、面基函数类型常数实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.update_orient!-Tuple{AT} where AT<:AbstractAntennaArray","page":"API","title":"MoM_Basics.update_orient!","text":"update_orient!(ary::AT; aryorient, sourceorientlc[, orientunit = :rad]) where {AT<:AbstractAntennaArray}\n\n通过机械旋转更新天线阵列 ary 的阵列指向为 aryorient，天线单元指向为 sourceorientlc，指向角单位为 orientunit 。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.update_orient!-Union{Tuple{FT}, Tuple{MagneticDipole{FT}, Any}, Tuple{MagneticDipole{FT}, Any, Any}} where FT<:Real","page":"API","title":"MoM_Basics.update_orient!","text":"update_orient!(md::MagneticDipole{FT}, orient, unit = :rad) where {FT <: Real}\n\n更新磁偶极 md 指向为 orient。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.update_phase!-Union{Tuple{AT}, Tuple{AT, Any}} where AT<:AbstractAntennaArray","page":"API","title":"MoM_Basics.update_phase!","text":"update_phase!(ary::AT, phase) where {AT<:AbstractAntennaArray}\n\n更新指向相位\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.update_phase!-Union{Tuple{FT}, Tuple{MagneticDipole{FT}, Any}} where FT<:Real","page":"API","title":"MoM_Basics.update_phase!","text":"update_phase!(md::MagneticDipole{FT}, phase) where {FT <: Real}\n\n设置磁偶极 md 的相位为 phase。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.θϕInfofromCart-Union{Tuple{AbstractVector{FT}}, Tuple{FT}} where FT<:Real","page":"API","title":"MoM_Basics.θϕInfofromCart","text":"θϕInfofromCart(rvec::Vec3D{FT}) where {FT<:Real}\n\n从直角坐标 rvec 计算三角函数：sinθ cosθ sinϕ cosϕ\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.@clock-Tuple{Any, Any}","page":"API","title":"MoM_Basics.@clock","text":"clock(message, ex)\n\n将表达式 ex 的运行时间以 message 为键保存在字典 timer 中。\n\n\n\n\n\n","category":"macro"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo","page":"API","title":"MoM_Basics.GaussQuadrature4Geo","text":"创建模组用于支持集合体高斯求积运算。\n\n\n\n\n\n","category":"module"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.GaussQuadratureInfoStruct","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.GaussQuadratureInfoStruct","text":"GaussQuadratureInfoStruct{FT<:Real}\n\n保存高斯求积相对坐标、权重等信息的结构体。\n\n\n\n\n\n","category":"type"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.GaussQuadratureInfo-Union{Tuple{IT}, Tuple{Symbol, IT}, Tuple{Symbol, IT, DataType}} where IT<:Integer","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.GaussQuadratureInfo","text":"GaussQuadratureInfo(GeoS::Symbol, GQN::IT, FT::DataType = Float64) where {IT<:Integer}\n\n通过集合类型 GeoS 、高斯求积点数量 GQN、浮点数据类型 FT 构造高斯求积信息实例。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.gaussQuadratureHexa","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.gaussQuadratureHexa","text":"gaussQuadratureHexa( num::Integer = 8, FT::DataType=Float64)\n\n计算六面体高斯求积局部坐标和权重。 num 为六面体高斯求积点数，本函数给出 1, 8, 27... i³ 的值，默认为8。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.gaussQuadratureQuad","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.gaussQuadratureQuad","text":"gaussQuadratureQuad( num::Integer = 4, FT::DataType=Float64)\n\n计算四边形高斯求积局部坐标和权重。 num 为四边形高斯求积点数，本函数给出 1, 4, 9 ... i² 的值，默认为4。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.gaussQuadratureTetra","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.gaussQuadratureTetra","text":"gaussQuadratureTetra( num::Integer = 4, FT::DataType=Float64)\n\n计算四面体高斯求积局部坐标和权重。 num 为四面体高斯求积点数，本函数给出1, 4, 5, 11的值，默认为4。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.GaussQuadrature4Geo.gaussQuadratureTri","page":"API","title":"MoM_Basics.GaussQuadrature4Geo.gaussQuadratureTri","text":"gaussQuadratureTri( num::Integer = 3, FT::DataType = Float64)\n\n计算三角形高斯求积局部坐标和权重。 num 为三角形高斯求积点数，本函数支持给出1, 3, 4, 6, 7的值，默认为3。\n\n\n\n\n\n","category":"function"},{"location":"api/#MoM_Basics.TaylorWins.calculateFm-NTuple{4, Any}","page":"API","title":"MoM_Basics.TaylorWins.calculateFm","text":"calculateFm(m, sp2, A, nbar)\n\n计算 Fm。\n\n\n\n\n\n","category":"method"},{"location":"api/#MoM_Basics.TaylorWins.taylorwin-Union{Tuple{IT}, Tuple{IT, Any}, Tuple{IT, Any, Any}} where IT<:Integer","page":"API","title":"MoM_Basics.TaylorWins.taylorwin","text":"taylorwin(L::IT, nbar = 4, sll = -30) where {IT<:Integer}\n\nTAYLORWIN   Taylor window.\n\nTAYLORWIN(N) returns an N-point Taylor window in a column vector.\n\nTAYLORWIN(N,nbar) returns an N-point Taylor window with nbar nearly constant-level sidelobes adjacent to the mainlobe. nbar must be an integer greater than or equal to one.\n\nTAYLORWIN(N,nbar,sll) returns an N-point Taylor window with sll maximum sidelobe level in dB relative to the mainlobe peak. sll must be a negative value, e.g., -30 dB.\n\nnbar should satisfy nbar >= 2*A^2+0.5, where A is equal to acosh(10^(-sll/20))/pi, otherwise the sidelobe level specified is not guaranteed. If nbar is not specified it defaults to 4. sll defaults to -30 dB if not specified.\n\nEXAMPLE This example generates a 64-point Taylor window with 4 sidelobes adjacent to the mainlobe that are nearly constant-level, and a peak sidelobe level of -35 dB relative to the mainlobe peak.\n\nw = taylorwin(64,5,-35); wvtool(w);\n\nSee also CHEBWIN.\n\nCopyright 2005-2018 The MathWorks, Inc.\n\nReferences:     [1] Carrara, Walter G., Ronald M. Majewski, and Ron S. Goodman,         Spotlight Synthetic Aperture Radar: Signal Processing Algorithms,         Artech House, October 1, 1995.     [2] Brookner, Eli, Practical Phased Array Antenna Systems,         Artech House, Inc., 1991, pg. 2-51.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"DocTestSetup = quote\n    using MoM_Basics\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: logo)","category":"page"},{"location":"#MoM_Basics","page":"Home","title":"MoM_Basics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: star)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Size) (Image: Downloads) (Image: License)","category":"page"},{"location":"#介绍","page":"Home","title":"介绍","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"提供 CEM_MoMs ((Image: github), (Image: gitee)) 包的基础信息，包含几何、网格相关类型和函数的定义、接口，基函数相关信息接口。CEM_MoMs 本身被拆分为几个独立的包以方便开发时快速编译， 同时避免在无图形化界面使用时调入绘图相关包而导致报错。","category":"page"},{"location":"#安装与测试","page":"Home","title":"安装与测试","text":"","category":"section"},{"location":"#安装","page":"Home","title":"安装","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"可直接在 Julia 的 REPL 包管理模式中安装：","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.add(\"MoM_Basics\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"或","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add MoM_Basics","category":"page"},{"location":"#测试","page":"Home","title":"测试","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"同样可直接在 Julia 的 REPL 包管理模式中测试包：","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.test(\"MoM_Basics\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"或","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add MoM_Basics","category":"page"}]
}
